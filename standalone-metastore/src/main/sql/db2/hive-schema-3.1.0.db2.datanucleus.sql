-- ----------------------------------------------------------------
-- DataNucleus SchemaTool (ran at 16/09/2019 13:59:24)
-- ----------------------------------------------------------------
-- Schema diff for jdbc:db2://tsql-lsql-mn.fyre.ibm.com:32051/bigsql and the following classes:-
--     org.apache.hadoop.hive.metastore.model.MCatalog
--     org.apache.hadoop.hive.metastore.model.MColumnDescriptor
--     org.apache.hadoop.hive.metastore.model.MConstraint
--     org.apache.hadoop.hive.metastore.model.MCreationMetadata
--     org.apache.hadoop.hive.metastore.model.MDBPrivilege
--     org.apache.hadoop.hive.metastore.model.MDatabase
--     org.apache.hadoop.hive.metastore.model.MDelegationToken
--     org.apache.hadoop.hive.metastore.model.MFieldSchema
--     org.apache.hadoop.hive.metastore.model.MFunction
--     org.apache.hadoop.hive.metastore.model.MGlobalPrivilege
--     org.apache.hadoop.hive.metastore.model.MISchema
--     org.apache.hadoop.hive.metastore.model.MIndex
--     org.apache.hadoop.hive.metastore.model.MMasterKey
--     org.apache.hadoop.hive.metastore.model.MMetastoreDBProperties
--     org.apache.hadoop.hive.metastore.model.MNotificationLog
--     org.apache.hadoop.hive.metastore.model.MNotificationNextId
--     org.apache.hadoop.hive.metastore.model.MOrder
--     org.apache.hadoop.hive.metastore.model.MPartition
--     org.apache.hadoop.hive.metastore.model.MPartitionColumnPrivilege
--     org.apache.hadoop.hive.metastore.model.MPartitionColumnStatistics
--     org.apache.hadoop.hive.metastore.model.MPartitionEvent
--     org.apache.hadoop.hive.metastore.model.MPartitionPrivilege
--     org.apache.hadoop.hive.metastore.model.MResourceUri
--     org.apache.hadoop.hive.metastore.model.MRole
--     org.apache.hadoop.hive.metastore.model.MRoleMap
--     org.apache.hadoop.hive.metastore.model.MRuntimeStat
--     org.apache.hadoop.hive.metastore.model.MSchemaVersion
--     org.apache.hadoop.hive.metastore.model.MSerDeInfo
--     org.apache.hadoop.hive.metastore.model.MStorageDescriptor
--     org.apache.hadoop.hive.metastore.model.MStringList
--     org.apache.hadoop.hive.metastore.model.MTable
--     org.apache.hadoop.hive.metastore.model.MTableColumnPrivilege
--     org.apache.hadoop.hive.metastore.model.MTableColumnStatistics
--     org.apache.hadoop.hive.metastore.model.MTablePrivilege
--     org.apache.hadoop.hive.metastore.model.MType
--     org.apache.hadoop.hive.metastore.model.MVersionTable
--     org.apache.hadoop.hive.metastore.model.MWMMapping
--     org.apache.hadoop.hive.metastore.model.MWMPool
--     org.apache.hadoop.hive.metastore.model.MWMResourcePlan
--     org.apache.hadoop.hive.metastore.model.MWMTrigger
--
-- Table DB_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MDBPrivilege]
CREATE TABLE DB_PRIVS(DB_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),CREATE_TIME INTEGER NOT NULL,DB_ID BIGINT,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),DB_PRIV VARCHAR(128));

ALTER TABLE DB_PRIVS ADD CONSTRAINT DB_PRIVS_PK PRIMARY KEY (DB_GRANT_ID);

-- Table ROLE_MAP for classes [org.apache.hadoop.hive.metastore.model.MRoleMap]
CREATE TABLE ROLE_MAP(ROLE_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),ADD_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),ROLE_ID BIGINT);

ALTER TABLE ROLE_MAP ADD CONSTRAINT ROLE_MAP_PK PRIMARY KEY (ROLE_GRANT_ID);

-- Table I_SCHEMA for classes [org.apache.hadoop.hive.metastore.model.MISchema]
CREATE TABLE I_SCHEMA(SCHEMA_ID BIGINT NOT NULL generated always as identity (start with 1),CAN_EVOLVE CHAR(1) NOT NULL CHECK (CAN_EVOLVE IN ('Y','N')),COMPATIBILITY INTEGER NOT NULL,DB_ID BIGINT,DESCRIPTION VARCHAR(4000),"NAME" VARCHAR(256),SCHEMA_GROUP VARCHAR(256),SCHEMA_TYPE INTEGER NOT NULL,VALIDATION_LEVEL INTEGER NOT NULL);

ALTER TABLE I_SCHEMA ADD CONSTRAINT I_SCHEMA_PK PRIMARY KEY (SCHEMA_ID);

-- Table TYPES for classes [org.apache.hadoop.hive.metastore.model.MType]
CREATE TABLE TYPES(TYPES_ID BIGINT NOT NULL generated always as identity (start with 1),TYPE_NAME VARCHAR(128),TYPE1 VARCHAR(767),TYPE2 VARCHAR(767));

ALTER TABLE TYPES ADD CONSTRAINT TYPES_PK PRIMARY KEY (TYPES_ID);

-- Table PARTITIONS for classes [org.apache.hadoop.hive.metastore.model.MPartition]
CREATE TABLE PARTITIONS(PART_ID BIGINT NOT NULL generated always as identity (start with 1),CREATE_TIME INTEGER NOT NULL,LAST_ACCESS_TIME INTEGER NOT NULL,PART_NAME VARCHAR(767),SD_ID BIGINT,TBL_ID BIGINT,WRITE_ID BIGINT NOT NULL);

ALTER TABLE PARTITIONS ADD CONSTRAINT PARTITIONS_PK PRIMARY KEY (PART_ID);

-- Table CTLGS for classes [org.apache.hadoop.hive.metastore.model.MCatalog]
CREATE TABLE CTLGS(CTLG_ID BIGINT NOT NULL generated always as identity (start with 1),"DESC" VARCHAR(4000),LOCATION_URI VARCHAR(4000) NOT NULL,"NAME" VARCHAR(256));

ALTER TABLE CTLGS ADD CONSTRAINT CTLGS_PK PRIMARY KEY (CTLG_ID);

-- Table SKEWED_STRING_LIST for classes [org.apache.hadoop.hive.metastore.model.MStringList]
CREATE TABLE SKEWED_STRING_LIST(STRING_LIST_ID BIGINT NOT NULL generated always as identity (start with 1));

ALTER TABLE SKEWED_STRING_LIST ADD CONSTRAINT SKEWED_STRIT7NU_PK PRIMARY KEY (STRING_LIST_ID);

-- Table DBS for classes [org.apache.hadoop.hive.metastore.model.MDatabase]
CREATE TABLE DBS(DB_ID BIGINT NOT NULL generated always as identity (start with 1),CTLG_NAME VARCHAR(256),"DESC" VARCHAR(4000),DB_LOCATION_URI VARCHAR(4000) NOT NULL,"NAME" VARCHAR(128),OWNER_NAME VARCHAR(128),OWNER_TYPE VARCHAR(10));

ALTER TABLE DBS ADD CONSTRAINT DBS_PK PRIMARY KEY (DB_ID);

-- Table METASTORE_DB_PROPERTIES for classes [org.apache.hadoop.hive.metastore.model.MMetastoreDBProperties]
CREATE TABLE METASTORE_DB_PROPERTIES(PROPERTY_KEY VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(1000) NOT NULL,PROPERTY_VALUE VARCHAR(1000) NOT NULL);

ALTER TABLE METASTORE_DB_PROPERTIES ADD CONSTRAINT METASTORE_D71PT_PK PRIMARY KEY (PROPERTY_KEY);

-- Table NOTIFICATION_SEQUENCE for classes [org.apache.hadoop.hive.metastore.model.MNotificationNextId]
CREATE TABLE NOTIFICATION_SEQUENCE(NNI_ID BIGINT NOT NULL generated always as identity (start with 1),NEXT_EVENT_ID BIGINT NOT NULL);

ALTER TABLE NOTIFICATION_SEQUENCE ADD CONSTRAINT NOTIFICATIOVEL1_PK PRIMARY KEY (NNI_ID);

-- Table FUNCS for classes [org.apache.hadoop.hive.metastore.model.MFunction]
CREATE TABLE FUNCS(FUNC_ID BIGINT NOT NULL generated always as identity (start with 1),CLASS_NAME VARCHAR(4000),CREATE_TIME INTEGER NOT NULL,DB_ID BIGINT,FUNC_NAME VARCHAR(128),FUNC_TYPE INTEGER NOT NULL,OWNER_NAME VARCHAR(128),OWNER_TYPE VARCHAR(10));

ALTER TABLE FUNCS ADD CONSTRAINT FUNCS_PK PRIMARY KEY (FUNC_ID);

-- Table CDS for classes [org.apache.hadoop.hive.metastore.model.MColumnDescriptor]
CREATE TABLE CDS(CD_ID BIGINT NOT NULL generated always as identity (start with 1));

ALTER TABLE CDS ADD CONSTRAINT CDS_PK PRIMARY KEY (CD_ID);

-- Table KEY_CONSTRAINTS for classes [org.apache.hadoop.hive.metastore.model.MConstraint]
CREATE TABLE KEY_CONSTRAINTS("CONSTRAINT_NAME" VARCHAR(255) NOT NULL,"POSITION" INTEGER NOT NULL,CHILD_CD_ID BIGINT,CHILD_INTEGER_IDX INTEGER,CHILD_TBL_ID BIGINT,CONSTRAINT_TYPE INTEGER NOT NULL,DEFAULTVALUE VARCHAR(255),DELETE_RULE INTEGER,ENABLE_VALIDATE_RELY INTEGER NOT NULL,PARENT_CD_ID BIGINT,PARENT_INTEGER_IDX INTEGER,PARENT_TBL_ID BIGINT,UPDATE_RULE INTEGER);

ALTER TABLE KEY_CONSTRAINTS ADD CONSTRAINT KEY_CONSTRAINTS_PK PRIMARY KEY ("CONSTRAINT_NAME","POSITION");

-- Table IDXS for classes [org.apache.hadoop.hive.metastore.model.MIndex]
CREATE TABLE IDXS(INDEX_ID BIGINT NOT NULL generated always as identity (start with 1),CREATE_TIME INTEGER NOT NULL,DEFERRED_REBUILD CHAR(1) NOT NULL CHECK (DEFERRED_REBUILD IN ('Y','N')),INDEX_HANDLER_CLASS VARCHAR(4000),INDEX_NAME VARCHAR(128),INDEX_TBL_ID BIGINT,LAST_ACCESS_TIME INTEGER NOT NULL,ORIG_TBL_ID BIGINT,SD_ID BIGINT);

ALTER TABLE IDXS ADD CONSTRAINT IDXS_PK PRIMARY KEY (INDEX_ID);

-- Table SCHEMA_VERSION for classes [org.apache.hadoop.hive.metastore.model.MSchemaVersion]
CREATE TABLE SCHEMA_VERSION(SCHEMA_VERSION_ID BIGINT NOT NULL generated always as identity (start with 1),CD_ID BIGINT,CREATED_AT BIGINT NOT NULL,DESCRIPTION VARCHAR(4000),FINGERPRINT VARCHAR(256),SCHEMA_ID BIGINT,SCHEMA_VERSION_NAME VARCHAR(256),SCHEMA_TEXT LONG VARCHAR,SERDE_ID BIGINT,"STATE" INTEGER NOT NULL,VERSION INTEGER NOT NULL);

ALTER TABLE SCHEMA_VERSION ADD CONSTRAINT SCHEMA_VERSION_PK PRIMARY KEY (SCHEMA_VERSION_ID);

-- Table WM_TRIGGER for classes [org.apache.hadoop.hive.metastore.model.MWMTrigger]
CREATE TABLE WM_TRIGGER(TRIGGER_ID BIGINT NOT NULL generated always as identity (start with 1),ACTION_EXPRESSION VARCHAR(255),IS_IN_UNMANAGED INTEGER NOT NULL,"NAME" VARCHAR(128) NOT NULL,RP_ID BIGINT NOT NULL,TRIGGER_EXPRESSION VARCHAR(255));

ALTER TABLE WM_TRIGGER ADD CONSTRAINT WM_TRIGGER_PK PRIMARY KEY (TRIGGER_ID);

-- Table WM_MAPPING for classes [org.apache.hadoop.hive.metastore.model.MWMMapping]
CREATE TABLE WM_MAPPING(MAPPING_ID BIGINT NOT NULL generated always as identity (start with 1),ENTITY_NAME VARCHAR(128),ENTITY_TYPE VARCHAR(128),ORDERING INTEGER,POOL_ID BIGINT,RP_ID BIGINT NOT NULL);

ALTER TABLE WM_MAPPING ADD CONSTRAINT WM_MAPPING_PK PRIMARY KEY (MAPPING_ID);

-- Table WM_POOL for classes [org.apache.hadoop.hive.metastore.model.MWMPool]
CREATE TABLE WM_POOL(POOL_ID BIGINT NOT NULL generated always as identity (start with 1),ALLOC_FRACTION DOUBLE,"PATH" VARCHAR(1024) NOT NULL,QUERY_PARALLELISM INTEGER,RP_ID BIGINT NOT NULL,SCHEDULING_POLICY VARCHAR(255));

ALTER TABLE WM_POOL ADD CONSTRAINT WM_POOL_PK PRIMARY KEY (POOL_ID);

-- Table MV_CREATION_METADATA for classes [org.apache.hadoop.hive.metastore.model.MCreationMetadata]
CREATE TABLE MV_CREATION_METADATA(MV_CREATION_METADATA_ID BIGINT NOT NULL generated always as identity (start with 1),CAT_NAME VARCHAR(256),DB_NAME VARCHAR(128),MATERIALIZATIONTIME BIGINT NOT NULL,TBL_NAME VARCHAR(256),TXN_LIST CLOB(2147483647));

ALTER TABLE MV_CREATION_METADATA ADD CONSTRAINT MV_CREATIONP287_PK PRIMARY KEY (MV_CREATION_METADATA_ID);

-- Table SDS for classes [org.apache.hadoop.hive.metastore.model.MStorageDescriptor]
CREATE TABLE SDS(SD_ID BIGINT NOT NULL generated always as identity (start with 1),CD_ID BIGINT,INPUT_FORMAT VARCHAR(4000),IS_COMPRESSED CHAR(1) NOT NULL CHECK (IS_COMPRESSED IN ('Y','N')),IS_STOREDASSUBDIRECTORIES CHAR(1) NOT NULL CHECK (IS_STOREDASSUBDIRECTORIES IN ('Y','N')),LOCATION VARCHAR(4000),NUM_BUCKETS INTEGER NOT NULL,OUTPUT_FORMAT VARCHAR(4000),SERDE_ID BIGINT);

ALTER TABLE SDS ADD CONSTRAINT SDS_PK PRIMARY KEY (SD_ID);

-- Table MASTER_KEYS for classes [org.apache.hadoop.hive.metastore.model.MMasterKey]
CREATE TABLE MASTER_KEYS(KEY_ID INTEGER NOT NULL generated always as identity (start with 1),MASTER_KEY VARCHAR(767));

ALTER TABLE MASTER_KEYS ADD CONSTRAINT MASTER_KEYS_PK PRIMARY KEY (KEY_ID);

-- Table PART_COL_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MPartitionColumnPrivilege]
CREATE TABLE PART_COL_PRIVS(PART_COLUMN_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),"COLUMN_NAME" VARCHAR(767),CREATE_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PART_ID BIGINT,PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),PART_COL_PRIV VARCHAR(128));

ALTER TABLE PART_COL_PRIVS ADD CONSTRAINT PART_COL_PRIVS_PK PRIMARY KEY (PART_COLUMN_GRANT_ID);

-- Table WM_RESOURCEPLAN for classes [org.apache.hadoop.hive.metastore.model.MWMResourcePlan]
CREATE TABLE WM_RESOURCEPLAN(RP_ID BIGINT NOT NULL generated always as identity (start with 1),DEFAULT_POOL_ID BIGINT,"NAME" VARCHAR(128) NOT NULL,QUERY_PARALLELISM INTEGER,STATUS VARCHAR(255) NOT NULL);

ALTER TABLE WM_RESOURCEPLAN ADD CONSTRAINT WM_RESOURCEPLAN_PK PRIMARY KEY (RP_ID);

-- Table PART_COL_STATS for classes [org.apache.hadoop.hive.metastore.model.MPartitionColumnStatistics]
CREATE TABLE PART_COL_STATS(CS_ID BIGINT NOT NULL generated always as identity (start with 1),AVG_COL_LEN DOUBLE,BIT_VECTOR BLOB(2147483647),CAT_NAME VARCHAR(256) NOT NULL,"COLUMN_NAME" VARCHAR(767) NOT NULL,COLUMN_TYPE VARCHAR(128) NOT NULL,DB_NAME VARCHAR(128) NOT NULL,BIG_DECIMAL_HIGH_VALUE VARCHAR(255),BIG_DECIMAL_LOW_VALUE VARCHAR(255),DOUBLE_HIGH_VALUE DOUBLE,DOUBLE_LOW_VALUE DOUBLE,LAST_ANALYZED BIGINT NOT NULL,LONG_HIGH_VALUE BIGINT,LONG_LOW_VALUE BIGINT,MAX_COL_LEN BIGINT,NUM_DISTINCTS BIGINT,NUM_FALSES BIGINT,NUM_NULLS BIGINT NOT NULL,NUM_TRUES BIGINT,PART_ID BIGINT,PARTITION_NAME VARCHAR(767) NOT NULL,"TABLE_NAME" VARCHAR(256) NOT NULL);

ALTER TABLE PART_COL_STATS ADD CONSTRAINT PART_COL_STATS_PK PRIMARY KEY (CS_ID);

-- Table TAB_COL_STATS for classes [org.apache.hadoop.hive.metastore.model.MTableColumnStatistics]
CREATE TABLE TAB_COL_STATS(CS_ID BIGINT NOT NULL generated always as identity (start with 1),AVG_COL_LEN DOUBLE,BIT_VECTOR BLOB(2147483647),CAT_NAME VARCHAR(256) NOT NULL,"COLUMN_NAME" VARCHAR(767) NOT NULL,COLUMN_TYPE VARCHAR(128) NOT NULL,DB_NAME VARCHAR(128) NOT NULL,BIG_DECIMAL_HIGH_VALUE VARCHAR(255),BIG_DECIMAL_LOW_VALUE VARCHAR(255),DOUBLE_HIGH_VALUE DOUBLE,DOUBLE_LOW_VALUE DOUBLE,LAST_ANALYZED BIGINT NOT NULL,LONG_HIGH_VALUE BIGINT,LONG_LOW_VALUE BIGINT,MAX_COL_LEN BIGINT,NUM_DISTINCTS BIGINT,NUM_FALSES BIGINT,NUM_NULLS BIGINT NOT NULL,NUM_TRUES BIGINT,TBL_ID BIGINT,"TABLE_NAME" VARCHAR(256) NOT NULL);

ALTER TABLE TAB_COL_STATS ADD CONSTRAINT TAB_COL_STATS_PK PRIMARY KEY (CS_ID);

-- Table GLOBAL_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MGlobalPrivilege]
CREATE TABLE GLOBAL_PRIVS(USER_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),CREATE_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),USER_PRIV VARCHAR(128));

ALTER TABLE GLOBAL_PRIVS ADD CONSTRAINT GLOBAL_PRIVS_PK PRIMARY KEY (USER_GRANT_ID);

-- Table TBLS for classes [org.apache.hadoop.hive.metastore.model.MTable]
CREATE TABLE TBLS(TBL_ID BIGINT NOT NULL generated always as identity (start with 1),CREATE_TIME INTEGER NOT NULL,DB_ID BIGINT,LAST_ACCESS_TIME INTEGER NOT NULL,OWNER VARCHAR(767),OWNER_TYPE VARCHAR(10),RETENTION INTEGER NOT NULL,IS_REWRITE_ENABLED CHAR(1) NOT NULL CHECK (IS_REWRITE_ENABLED IN ('Y','N')),SD_ID BIGINT,TBL_NAME VARCHAR(256),TBL_TYPE VARCHAR(128),VIEW_EXPANDED_TEXT LONG VARCHAR,VIEW_ORIGINAL_TEXT LONG VARCHAR,WRITE_ID BIGINT NOT NULL);

ALTER TABLE TBLS ADD CONSTRAINT TBLS_PK PRIMARY KEY (TBL_ID);

-- Table TBL_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MTablePrivilege]
CREATE TABLE TBL_PRIVS(TBL_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),CREATE_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),TBL_PRIV VARCHAR(128),TBL_ID BIGINT);

ALTER TABLE TBL_PRIVS ADD CONSTRAINT TBL_PRIVS_PK PRIMARY KEY (TBL_GRANT_ID);

-- Table SERDES for classes [org.apache.hadoop.hive.metastore.model.MSerDeInfo]
CREATE TABLE SERDES(SERDE_ID BIGINT NOT NULL generated always as identity (start with 1),DESCRIPTION VARCHAR(4000),DESERIALIZER_CLASS VARCHAR(4000),"NAME" VARCHAR(128),SERDE_TYPE INTEGER,SLIB VARCHAR(4000),SERIALIZER_CLASS VARCHAR(4000));

ALTER TABLE SERDES ADD CONSTRAINT SERDES_PK PRIMARY KEY (SERDE_ID);

-- Table NOTIFICATION_LOG for classes [org.apache.hadoop.hive.metastore.model.MNotificationLog]
CREATE TABLE NOTIFICATION_LOG(NL_ID BIGINT NOT NULL generated always as identity (start with 1),CAT_NAME VARCHAR(256),DB_NAME VARCHAR(128),EVENT_ID BIGINT NOT NULL,EVENT_TIME INTEGER NOT NULL,EVENT_TYPE VARCHAR(32) NOT NULL,MESSAGE LONG VARCHAR,MESSAGE_FORMAT VARCHAR(16),TBL_NAME VARCHAR(256));

ALTER TABLE NOTIFICATION_LOG ADD CONSTRAINT NOTIFICATIOMLLC_PK PRIMARY KEY (NL_ID);

-- Table PARTITION_EVENTS for classes [org.apache.hadoop.hive.metastore.model.MPartitionEvent]
CREATE TABLE PARTITION_EVENTS(PART_NAME_ID BIGINT NOT NULL generated always as identity (start with 1),CAT_NAME VARCHAR(256),DB_NAME VARCHAR(128),EVENT_TIME BIGINT NOT NULL,EVENT_TYPE INTEGER NOT NULL,PARTITION_NAME VARCHAR(767),TBL_NAME VARCHAR(256));

ALTER TABLE PARTITION_EVENTS ADD CONSTRAINT PARTITION_EZ1V2_PK PRIMARY KEY (PART_NAME_ID);

-- Table TBL_COL_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MTableColumnPrivilege]
CREATE TABLE TBL_COL_PRIVS(TBL_COLUMN_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),"COLUMN_NAME" VARCHAR(767),CREATE_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),TBL_COL_PRIV VARCHAR(128),TBL_ID BIGINT);

ALTER TABLE TBL_COL_PRIVS ADD CONSTRAINT TBL_COL_PRIVS_PK PRIMARY KEY (TBL_COLUMN_GRANT_ID);

-- Table RUNTIME_STATS for classes [org.apache.hadoop.hive.metastore.model.MRuntimeStat]
CREATE TABLE RUNTIME_STATS(RS_ID BIGINT NOT NULL generated always as identity (start with 1),CREATE_TIME INTEGER NOT NULL,PAYLOAD BLOB(2147483647),WEIGHT INTEGER NOT NULL);

ALTER TABLE RUNTIME_STATS ADD CONSTRAINT RUNTIME_STATS_PK PRIMARY KEY (RS_ID);

-- Table VERSION for classes [org.apache.hadoop.hive.metastore.model.MVersionTable]
CREATE TABLE VERSION(VER_ID BIGINT NOT NULL generated always as identity (start with 1),SCHEMA_VERSION VARCHAR(127) NOT NULL,VERSION_COMMENT VARCHAR(255) NOT NULL);

ALTER TABLE VERSION ADD CONSTRAINT VERSION_PK PRIMARY KEY (VER_ID);

-- Table PART_PRIVS for classes [org.apache.hadoop.hive.metastore.model.MPartitionPrivilege]
CREATE TABLE PART_PRIVS(PART_GRANT_ID BIGINT NOT NULL generated always as identity (start with 1),AUTHORIZER VARCHAR(128),CREATE_TIME INTEGER NOT NULL,GRANT_OPTION SMALLINT NOT NULL CHECK (GRANT_OPTION IN (0,1)),GRANTOR VARCHAR(128),GRANTOR_TYPE VARCHAR(128),PART_ID BIGINT,PRINCIPAL_NAME VARCHAR(128),PRINCIPAL_TYPE VARCHAR(128),PART_PRIV VARCHAR(128));

ALTER TABLE PART_PRIVS ADD CONSTRAINT PART_PRIVS_PK PRIMARY KEY (PART_GRANT_ID);

-- Table DELEGATION_TOKENS for classes [org.apache.hadoop.hive.metastore.model.MDelegationToken]
CREATE TABLE DELEGATION_TOKENS(TOKEN_IDENT VARCHAR(767) NOT NULL,TOKEN VARCHAR(767));

ALTER TABLE DELEGATION_TOKENS ADD CONSTRAINT DELEGATION_OYOH_PK PRIMARY KEY (TOKEN_IDENT);

-- Table ROLES for classes [org.apache.hadoop.hive.metastore.model.MRole]
ALTER TABLE ROLES ADD ROLE_ID BIGINT NOT NULL generated always as identity (start with 1);

ALTER TABLE ROLES ADD ROLE_NAME VARCHAR(128);

ALTER TABLE ROLES ADD OWNER_NAME VARCHAR(128);

-- Table MV_TABLES_USED for join relationship
CREATE TABLE MV_TABLES_USED(MV_CREATION_METADATA_ID BIGINT NOT NULL,TBL_ID BIGINT NOT NULL);

ALTER TABLE MV_TABLES_USED ADD CONSTRAINT MV_TABLES_USED_PK PRIMARY KEY (MV_CREATION_METADATA_ID,TBL_ID);

-- Table PARTITION_KEYS for join relationship
CREATE TABLE PARTITION_KEYS(TBL_ID BIGINT NOT NULL,PKEY_COMMENT VARCHAR(4000),PKEY_NAME VARCHAR(128) NOT NULL,PKEY_TYPE VARCHAR(767) NOT NULL,IDX INTEGER NOT NULL);

ALTER TABLE PARTITION_KEYS ADD CONSTRAINT PARTITION_KEY_PK PRIMARY KEY (TBL_ID,PKEY_NAME);

-- Table FUNC_RU for join relationship
CREATE TABLE FUNC_RU(FUNC_ID BIGINT NOT NULL,RESOURCE_TYPE INTEGER NOT NULL,RESOURCE_URI VARCHAR(4000),IDX INTEGER NOT NULL);

ALTER TABLE FUNC_RU ADD CONSTRAINT FUNC_RU_PK PRIMARY KEY (FUNC_ID,IDX);

-- Table SORT_COLS for join relationship
CREATE TABLE SORT_COLS(SD_ID BIGINT NOT NULL,"COLUMN_NAME" VARCHAR(767),"ORDER" INTEGER NOT NULL,IDX INTEGER NOT NULL);

ALTER TABLE SORT_COLS ADD CONSTRAINT SORT_COLS_PK PRIMARY KEY (SD_ID,IDX);

-- Table INDEX_PARAMS for join relationship
CREATE TABLE INDEX_PARAMS(INDEX_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(256) NOT NULL,PARAM_VALUE VARCHAR(4000));

ALTER TABLE INDEX_PARAMS ADD CONSTRAINT INDEX_PARAMS_PK PRIMARY KEY (INDEX_ID,PARAM_KEY);

-- Table TYPE_FIELDS for join relationship
CREATE TABLE TYPE_FIELDS(TYPE_NAME BIGINT NOT NULL,"COMMENT" VARCHAR(256),FIELD_NAME VARCHAR(128) NOT NULL,FIELD_TYPE VARCHAR(767) NOT NULL,IDX INTEGER NOT NULL);

ALTER TABLE TYPE_FIELDS ADD CONSTRAINT TYPE_FIELDS_PK PRIMARY KEY (TYPE_NAME,FIELD_NAME);

-- Table COLUMNS_V2 for join relationship
CREATE TABLE COLUMNS_V2(CD_ID BIGINT NOT NULL,"COMMENT" VARCHAR(256),"COLUMN_NAME" VARCHAR(767) NOT NULL,TYPE_NAME VARCHAR(32672) NOT NULL,IDX INTEGER NOT NULL);

ALTER TABLE COLUMNS_V2 ADD CONSTRAINT COLUMNS_PK PRIMARY KEY (CD_ID,"COLUMN_NAME");

-- Table WM_POOL_TO_TRIGGER for join relationship
CREATE TABLE WM_POOL_TO_TRIGGER(TRIGGER_ID BIGINT NOT NULL,POOL_ID BIGINT NOT NULL);

ALTER TABLE WM_POOL_TO_TRIGGER ADD CONSTRAINT WM_POOL_TO_9SHA_PK PRIMARY KEY (TRIGGER_ID,POOL_ID);

-- Table SD_PARAMS for join relationship
CREATE TABLE SD_PARAMS(SD_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(256) NOT NULL,PARAM_VALUE VARCHAR(32672));

ALTER TABLE SD_PARAMS ADD CONSTRAINT SD_PARAMS_PK PRIMARY KEY (SD_ID,PARAM_KEY);

-- Table SKEWED_STRING_LIST_VALUES for join relationship
CREATE TABLE SKEWED_STRING_LIST_VALUES(STRING_LIST_ID BIGINT NOT NULL,STRING_LIST_VALUE VARCHAR(255),IDX INTEGER NOT NULL);

ALTER TABLE SKEWED_STRING_LIST_VALUES ADD CONSTRAINT SKEWED_STRISI9H_PK PRIMARY KEY (STRING_LIST_ID,IDX);

-- Table SKEWED_COL_VALUE_LOC_MAP for join relationship
CREATE TABLE SKEWED_COL_VALUE_LOC_MAP(SD_ID BIGINT NOT NULL,STRING_LIST_ID_KID BIGINT NOT NULL,LOCATION VARCHAR(4000));

ALTER TABLE SKEWED_COL_VALUE_LOC_MAP ADD CONSTRAINT SKEWED_COL_5JSQ_PK PRIMARY KEY (SD_ID,STRING_LIST_ID_KID);

-- Table PARTITION_KEY_VALS for join relationship
CREATE TABLE PARTITION_KEY_VALS(PART_ID BIGINT NOT NULL,PART_KEY_VAL VARCHAR(255),IDX INTEGER NOT NULL);

ALTER TABLE PARTITION_KEY_VALS ADD CONSTRAINT PARTITION_KZCCN_PK PRIMARY KEY (PART_ID,IDX);

-- Table TABLE_PARAMS for join relationship
CREATE TABLE TABLE_PARAMS(TBL_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(256) NOT NULL,PARAM_VALUE VARCHAR(32672));

ALTER TABLE TABLE_PARAMS ADD CONSTRAINT TABLE_PARAMS_PK PRIMARY KEY (TBL_ID,PARAM_KEY);

-- Table SKEWED_VALUES for join relationship
CREATE TABLE SKEWED_VALUES(SD_ID_OID BIGINT NOT NULL,STRING_LIST_ID_EID BIGINT,IDX INTEGER NOT NULL);

ALTER TABLE SKEWED_VALUES ADD CONSTRAINT SKEWED_VALUES_PK PRIMARY KEY (SD_ID_OID,IDX);

-- Table SKEWED_COL_NAMES for join relationship
CREATE TABLE SKEWED_COL_NAMES(SD_ID BIGINT NOT NULL,SKEWED_COL_NAME VARCHAR(255),IDX INTEGER NOT NULL);

ALTER TABLE SKEWED_COL_NAMES ADD CONSTRAINT SKEWED_COL_B0UL_PK PRIMARY KEY (SD_ID,IDX);

-- Table PARTITION_PARAMS for join relationship
CREATE TABLE PARTITION_PARAMS(PART_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(256) NOT NULL,PARAM_VALUE VARCHAR(4000));

ALTER TABLE PARTITION_PARAMS ADD CONSTRAINT PARTITION_P58RF_PK PRIMARY KEY (PART_ID,PARAM_KEY);

-- Table BUCKETING_COLS for join relationship
CREATE TABLE BUCKETING_COLS(SD_ID BIGINT NOT NULL,BUCKET_COL_NAME VARCHAR(255),IDX INTEGER NOT NULL);

ALTER TABLE BUCKETING_COLS ADD CONSTRAINT BUCKETING_COLS_PK PRIMARY KEY (SD_ID,IDX);

-- Table DATABASE_PARAMS for join relationship
CREATE TABLE DATABASE_PARAMS(DB_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(180) NOT NULL,PARAM_VALUE VARCHAR(4000));

ALTER TABLE DATABASE_PARAMS ADD CONSTRAINT DATABASE_PARAMS_PK PRIMARY KEY (DB_ID,PARAM_KEY);

-- Table SERDE_PARAMS for join relationship
CREATE TABLE SERDE_PARAMS(SERDE_ID BIGINT NOT NULL,PARAM_KEY VARCHAR(256) NOT NULL,PARAM_VALUE VARCHAR(32672));

ALTER TABLE SERDE_PARAMS ADD CONSTRAINT SERDE_PARAMS_PK PRIMARY KEY (SERDE_ID,PARAM_KEY);

-- Constraints for table DB_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MDBPrivilege]
ALTER TABLE DB_PRIVS ADD CONSTRAINT DB_PRIVS_FK1 FOREIGN KEY (DB_ID) REFERENCES DBS (DB_ID) ;

CREATE INDEX DB_PRIVS_N49 ON DB_PRIVS (DB_ID);

CREATE UNIQUE INDEX DBPRIVILEGEINDEX ON DB_PRIVS (AUTHORIZER,DB_ID,PRINCIPAL_NAME,PRINCIPAL_TYPE,DB_PRIV,GRANTOR,GRANTOR_TYPE);


-- Constraints for table ROLE_MAP for class(es) [org.apache.hadoop.hive.metastore.model.MRoleMap]
ALTER TABLE ROLE_MAP ADD CONSTRAINT ROLE_MAP_FK1 FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ROLE_ID) ;

CREATE INDEX ROLE_MAP_N49 ON ROLE_MAP (ROLE_ID);

CREATE UNIQUE INDEX USERROLEMAPINDEX ON ROLE_MAP (PRINCIPAL_NAME,ROLE_ID,GRANTOR,GRANTOR_TYPE);


-- Constraints for table I_SCHEMA for class(es) [org.apache.hadoop.hive.metastore.model.MISchema]
ALTER TABLE I_SCHEMA ADD CONSTRAINT I_SCHEMA_FK1 FOREIGN KEY (DB_ID) REFERENCES DBS (DB_ID) ;

CREATE INDEX I_SCHEMA_N49 ON I_SCHEMA (DB_ID);


-- Constraints for table TYPES for class(es) [org.apache.hadoop.hive.metastore.model.MType]
CREATE UNIQUE INDEX UNIQUETYPE ON TYPES (TYPE_NAME);


-- Constraints for table PARTITIONS for class(es) [org.apache.hadoop.hive.metastore.model.MPartition]
ALTER TABLE PARTITIONS ADD CONSTRAINT PARTITIONS_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

ALTER TABLE PARTITIONS ADD CONSTRAINT PARTITIONS_FK2 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE UNIQUE INDEX UNIQUEPARTITION ON PARTITIONS (PART_NAME,TBL_ID);

CREATE INDEX PARTITIONS_N50 ON PARTITIONS (SD_ID);

CREATE INDEX PARTITIONS_N49 ON PARTITIONS (TBL_ID);


-- Constraints for table CTLGS for class(es) [org.apache.hadoop.hive.metastore.model.MCatalog]
CREATE UNIQUE INDEX UNIQUECATALOG ON CTLGS ("NAME");


-- Constraints for table SKEWED_STRING_LIST for class(es) [org.apache.hadoop.hive.metastore.model.MStringList]

-- Constraints for table DBS for class(es) [org.apache.hadoop.hive.metastore.model.MDatabase]
CREATE UNIQUE INDEX UNIQUEDATABASE ON DBS ("NAME",CTLG_NAME);


-- Constraints for table METASTORE_DB_PROPERTIES for class(es) [org.apache.hadoop.hive.metastore.model.MMetastoreDBProperties]

-- Constraints for table NOTIFICATION_SEQUENCE for class(es) [org.apache.hadoop.hive.metastore.model.MNotificationNextId]

-- Constraints for table FUNCS for class(es) [org.apache.hadoop.hive.metastore.model.MFunction]
ALTER TABLE FUNCS ADD CONSTRAINT FUNCS_FK1 FOREIGN KEY (DB_ID) REFERENCES DBS (DB_ID) ;

CREATE INDEX FUNCS_N49 ON FUNCS (DB_ID);

CREATE UNIQUE INDEX UNIQUEFUNCTION ON FUNCS (FUNC_NAME,DB_ID);


-- Constraints for table CDS for class(es) [org.apache.hadoop.hive.metastore.model.MColumnDescriptor]

-- Constraints for table KEY_CONSTRAINTS for class(es) [org.apache.hadoop.hive.metastore.model.MConstraint]
ALTER TABLE KEY_CONSTRAINTS ADD CONSTRAINT KEY_CONSTRN7KM_FK1 FOREIGN KEY (CHILD_CD_ID) REFERENCES CDS (CD_ID) ;

ALTER TABLE KEY_CONSTRAINTS ADD CONSTRAINT KEY_CONSTRN7KM_FK3 FOREIGN KEY (PARENT_CD_ID) REFERENCES CDS (CD_ID) ;

ALTER TABLE KEY_CONSTRAINTS ADD CONSTRAINT KEY_CONSTRN7KM_FK2 FOREIGN KEY (CHILD_TBL_ID) REFERENCES TBLS (TBL_ID) ;

ALTER TABLE KEY_CONSTRAINTS ADD CONSTRAINT KEY_CONSTRN7KM_FK4 FOREIGN KEY (PARENT_TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX KEY_CONSTRN7KM_N51 ON KEY_CONSTRAINTS (PARENT_TBL_ID);

CREATE INDEX KEY_CONSTRN7KM_N50 ON KEY_CONSTRAINTS (CHILD_TBL_ID);

CREATE INDEX KEY_CONSTRN7KM_N52 ON KEY_CONSTRAINTS (PARENT_CD_ID);

CREATE INDEX KEY_CONSTRN7KM_N49 ON KEY_CONSTRAINTS (CHILD_CD_ID);


-- Constraints for table IDXS for class(es) [org.apache.hadoop.hive.metastore.model.MIndex]
ALTER TABLE IDXS ADD CONSTRAINT IDXS_FK3 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

ALTER TABLE IDXS ADD CONSTRAINT IDXS_FK2 FOREIGN KEY (ORIG_TBL_ID) REFERENCES TBLS (TBL_ID) ;

ALTER TABLE IDXS ADD CONSTRAINT IDXS_FK1 FOREIGN KEY (INDEX_TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE UNIQUE INDEX UNIQUEINDEX ON IDXS (INDEX_NAME,ORIG_TBL_ID);

CREATE INDEX IDXS_N51 ON IDXS (ORIG_TBL_ID);

CREATE INDEX IDXS_N50 ON IDXS (INDEX_TBL_ID);

CREATE INDEX IDXS_N49 ON IDXS (SD_ID);


-- Constraints for table SCHEMA_VERSION for class(es) [org.apache.hadoop.hive.metastore.model.MSchemaVersion]
ALTER TABLE SCHEMA_VERSION ADD CONSTRAINT SCHEMA_VERSION_FK3 FOREIGN KEY (SERDE_ID) REFERENCES SERDES (SERDE_ID) ;

ALTER TABLE SCHEMA_VERSION ADD CONSTRAINT SCHEMA_VERSION_FK2 FOREIGN KEY (SCHEMA_ID) REFERENCES I_SCHEMA (SCHEMA_ID) ;

ALTER TABLE SCHEMA_VERSION ADD CONSTRAINT SCHEMA_VERSION_FK1 FOREIGN KEY (CD_ID) REFERENCES CDS (CD_ID) ;

CREATE INDEX SCHEMA_VERSION_N49 ON SCHEMA_VERSION (SCHEMA_ID);

CREATE INDEX SCHEMA_VERSION_N50 ON SCHEMA_VERSION (SERDE_ID);

CREATE INDEX SCHEMA_VERSION_N51 ON SCHEMA_VERSION (CD_ID);


-- Constraints for table WM_TRIGGER for class(es) [org.apache.hadoop.hive.metastore.model.MWMTrigger]
ALTER TABLE WM_TRIGGER ADD CONSTRAINT WM_TRIGGER_FK1 FOREIGN KEY (RP_ID) REFERENCES WM_RESOURCEPLAN (RP_ID) ;

CREATE INDEX WM_TRIGGER_N49 ON WM_TRIGGER (RP_ID);

CREATE UNIQUE INDEX UNIQUEWMTRIGGER ON WM_TRIGGER (RP_ID,"NAME");


-- Constraints for table WM_MAPPING for class(es) [org.apache.hadoop.hive.metastore.model.MWMMapping]
ALTER TABLE WM_MAPPING ADD CONSTRAINT WM_MAPPING_FK1 FOREIGN KEY (POOL_ID) REFERENCES WM_POOL (POOL_ID) ;

ALTER TABLE WM_MAPPING ADD CONSTRAINT WM_MAPPING_FK2 FOREIGN KEY (RP_ID) REFERENCES WM_RESOURCEPLAN (RP_ID) ;

CREATE INDEX WM_MAPPING_N49 ON WM_MAPPING (POOL_ID);

CREATE INDEX WM_MAPPING_N50 ON WM_MAPPING (RP_ID);

CREATE UNIQUE INDEX UNIQUEWMMAPPING ON WM_MAPPING (RP_ID,ENTITY_TYPE,ENTITY_NAME);


-- Constraints for table WM_POOL for class(es) [org.apache.hadoop.hive.metastore.model.MWMPool]
ALTER TABLE WM_POOL ADD CONSTRAINT WM_POOL_FK1 FOREIGN KEY (RP_ID) REFERENCES WM_RESOURCEPLAN (RP_ID) ;

CREATE INDEX WM_POOL_N49 ON WM_POOL (RP_ID);

CREATE UNIQUE INDEX UNIQUEWMPOOL ON WM_POOL (RP_ID,"PATH");


-- Constraints for table MV_CREATION_METADATA for class(es) [org.apache.hadoop.hive.metastore.model.MCreationMetadata]

-- Constraints for table SDS for class(es) [org.apache.hadoop.hive.metastore.model.MStorageDescriptor]
ALTER TABLE SDS ADD CONSTRAINT SDS_FK1 FOREIGN KEY (CD_ID) REFERENCES CDS (CD_ID) ;

ALTER TABLE SDS ADD CONSTRAINT SDS_FK2 FOREIGN KEY (SERDE_ID) REFERENCES SERDES (SERDE_ID) ;

CREATE INDEX SDS_N50 ON SDS (SERDE_ID);

CREATE INDEX SDS_N49 ON SDS (CD_ID);


-- Constraints for table MASTER_KEYS for class(es) [org.apache.hadoop.hive.metastore.model.MMasterKey]

-- Constraints for table PART_COL_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MPartitionColumnPrivilege]
ALTER TABLE PART_COL_PRIVS ADD CONSTRAINT PART_COL_PRIVS_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) ;

CREATE INDEX PARTITIONCOLUMNPRIVILEGEINDEX ON PART_COL_PRIVS (AUTHORIZER,PART_ID,"COLUMN_NAME",PRINCIPAL_NAME,PRINCIPAL_TYPE,PART_COL_PRIV,GRANTOR,GRANTOR_TYPE);

CREATE INDEX PART_COL_PRIVS_N49 ON PART_COL_PRIVS (PART_ID);


-- Constraints for table WM_RESOURCEPLAN for class(es) [org.apache.hadoop.hive.metastore.model.MWMResourcePlan]
ALTER TABLE WM_RESOURCEPLAN ADD CONSTRAINT WM_RESOURCC1Z4_FK1 FOREIGN KEY (DEFAULT_POOL_ID) REFERENCES WM_POOL (POOL_ID) ;

CREATE UNIQUE INDEX UNIQUERESOURCEPLAN ON WM_RESOURCEPLAN ("NAME");

CREATE INDEX WM_RESOURCC1Z4_N49 ON WM_RESOURCEPLAN (DEFAULT_POOL_ID);


-- Constraints for table PART_COL_STATS for class(es) [org.apache.hadoop.hive.metastore.model.MPartitionColumnStatistics]
ALTER TABLE PART_COL_STATS ADD CONSTRAINT PART_COL_STATS_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) ;

CREATE INDEX PART_COL_STATS_N49 ON PART_COL_STATS (PART_ID);


-- Constraints for table TAB_COL_STATS for class(es) [org.apache.hadoop.hive.metastore.model.MTableColumnStatistics]
ALTER TABLE TAB_COL_STATS ADD CONSTRAINT TAB_COL_STATS_FK1 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX TAB_COL_STATS_N49 ON TAB_COL_STATS (TBL_ID);


-- Constraints for table GLOBAL_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MGlobalPrivilege]
CREATE UNIQUE INDEX GLOBALPRIVILEGEINDEX ON GLOBAL_PRIVS (AUTHORIZER,PRINCIPAL_NAME,PRINCIPAL_TYPE,USER_PRIV,GRANTOR,GRANTOR_TYPE);


-- Constraints for table TBLS for class(es) [org.apache.hadoop.hive.metastore.model.MTable]
ALTER TABLE TBLS ADD CONSTRAINT TBLS_FK1 FOREIGN KEY (DB_ID) REFERENCES DBS (DB_ID) ;

ALTER TABLE TBLS ADD CONSTRAINT TBLS_FK2 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

CREATE INDEX TBLS_N50 ON TBLS (DB_ID);

CREATE INDEX TBLS_N49 ON TBLS (SD_ID);

CREATE UNIQUE INDEX UNIQUETABLE ON TBLS (TBL_NAME,DB_ID);


-- Constraints for table TBL_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MTablePrivilege]
ALTER TABLE TBL_PRIVS ADD CONSTRAINT TBL_PRIVS_FK1 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX TABLEPRIVILEGEINDEX ON TBL_PRIVS (AUTHORIZER,TBL_ID,PRINCIPAL_NAME,PRINCIPAL_TYPE,TBL_PRIV,GRANTOR,GRANTOR_TYPE);

CREATE INDEX TBL_PRIVS_N49 ON TBL_PRIVS (TBL_ID);


-- Constraints for table SERDES for class(es) [org.apache.hadoop.hive.metastore.model.MSerDeInfo]

-- Constraints for table NOTIFICATION_LOG for class(es) [org.apache.hadoop.hive.metastore.model.MNotificationLog]

-- Constraints for table PARTITION_EVENTS for class(es) [org.apache.hadoop.hive.metastore.model.MPartitionEvent]
CREATE INDEX PARTITIONEVENTINDEX ON PARTITION_EVENTS (PARTITION_NAME);


-- Constraints for table TBL_COL_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MTableColumnPrivilege]
ALTER TABLE TBL_COL_PRIVS ADD CONSTRAINT TBL_COL_PRIVS_FK1 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX TABLECOLUMNPRIVILEGEINDEX ON TBL_COL_PRIVS (AUTHORIZER,TBL_ID,"COLUMN_NAME",PRINCIPAL_NAME,PRINCIPAL_TYPE,TBL_COL_PRIV,GRANTOR,GRANTOR_TYPE);

CREATE INDEX TBL_COL_PRIVS_N49 ON TBL_COL_PRIVS (TBL_ID);


-- Constraints for table RUNTIME_STATS for class(es) [org.apache.hadoop.hive.metastore.model.MRuntimeStat]

-- Constraints for table VERSION for class(es) [org.apache.hadoop.hive.metastore.model.MVersionTable]

-- Constraints for table PART_PRIVS for class(es) [org.apache.hadoop.hive.metastore.model.MPartitionPrivilege]
ALTER TABLE PART_PRIVS ADD CONSTRAINT PART_PRIVS_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) ;

CREATE INDEX PART_PRIVS_N49 ON PART_PRIVS (PART_ID);

CREATE INDEX PARTPRIVILEGEINDEX ON PART_PRIVS (AUTHORIZER,PART_ID,PRINCIPAL_NAME,PRINCIPAL_TYPE,PART_PRIV,GRANTOR,GRANTOR_TYPE);


-- Constraints for table DELEGATION_TOKENS for class(es) [org.apache.hadoop.hive.metastore.model.MDelegationToken]

-- Constraints for table ROLES for class(es) [org.apache.hadoop.hive.metastore.model.MRole]
CREATE UNIQUE INDEX ROLEENTITYINDEX ON ROLES (ROLE_NAME);


-- Constraints for table MV_TABLES_USED
ALTER TABLE MV_TABLES_USED ADD CONSTRAINT MV_TABLES_USED_FK2 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

ALTER TABLE MV_TABLES_USED ADD CONSTRAINT MV_TABLES_USED_FK1 FOREIGN KEY (MV_CREATION_METADATA_ID) REFERENCES MV_CREATION_METADATA (MV_CREATION_METADATA_ID) ;

CREATE INDEX MV_TABLES_USED_N49 ON MV_TABLES_USED (MV_CREATION_METADATA_ID);

CREATE INDEX MV_TABLES_USED_N50 ON MV_TABLES_USED (TBL_ID);


-- Constraints for table PARTITION_KEYS
ALTER TABLE PARTITION_KEYS ADD CONSTRAINT PARTITION_KEYS_FK1 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX PARTITION_KEYS_N49 ON PARTITION_KEYS (TBL_ID);


-- Constraints for table FUNC_RU
ALTER TABLE FUNC_RU ADD CONSTRAINT FUNC_RU_FK1 FOREIGN KEY (FUNC_ID) REFERENCES FUNCS (FUNC_ID) ;

CREATE INDEX FUNC_RU_N49 ON FUNC_RU (FUNC_ID);


-- Constraints for table SORT_COLS
ALTER TABLE SORT_COLS ADD CONSTRAINT SORT_COLS_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

CREATE INDEX SORT_COLS_N49 ON SORT_COLS (SD_ID);


-- Constraints for table INDEX_PARAMS
ALTER TABLE INDEX_PARAMS ADD CONSTRAINT INDEX_PARAMS_FK1 FOREIGN KEY (INDEX_ID) REFERENCES IDXS (INDEX_ID) ;

CREATE INDEX INDEX_PARAMS_N49 ON INDEX_PARAMS (INDEX_ID);


-- Constraints for table TYPE_FIELDS
ALTER TABLE TYPE_FIELDS ADD CONSTRAINT TYPE_FIELDS_FK1 FOREIGN KEY (TYPE_NAME) REFERENCES TYPES (TYPES_ID) ;

CREATE INDEX TYPE_FIELDS_N49 ON TYPE_FIELDS (TYPE_NAME);


-- Constraints for table COLUMNS_V2
ALTER TABLE COLUMNS_V2 ADD CONSTRAINT COLUMNS_V2_FK1 FOREIGN KEY (CD_ID) REFERENCES CDS (CD_ID) ;

CREATE INDEX COLUMNS_V2_N49 ON COLUMNS_V2 (CD_ID);


-- Constraints for table WM_POOL_TO_TRIGGER
ALTER TABLE WM_POOL_TO_TRIGGER ADD CONSTRAINT WM_POOL_TO9SHA_FK2 FOREIGN KEY (POOL_ID) REFERENCES WM_POOL (POOL_ID) ;

ALTER TABLE WM_POOL_TO_TRIGGER ADD CONSTRAINT WM_POOL_TO9SHA_FK1 FOREIGN KEY (TRIGGER_ID) REFERENCES WM_TRIGGER (TRIGGER_ID) ;

CREATE INDEX WM_POOL_TO9SHA_N50 ON WM_POOL_TO_TRIGGER (TRIGGER_ID);

CREATE INDEX WM_POOL_TO9SHA_N49 ON WM_POOL_TO_TRIGGER (POOL_ID);


-- Constraints for table SD_PARAMS
ALTER TABLE SD_PARAMS ADD CONSTRAINT SD_PARAMS_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

CREATE INDEX SD_PARAMS_N49 ON SD_PARAMS (SD_ID);


-- Constraints for table SKEWED_STRING_LIST_VALUES
ALTER TABLE SKEWED_STRING_LIST_VALUES ADD CONSTRAINT SKEWED_STRSI9H_FK1 FOREIGN KEY (STRING_LIST_ID) REFERENCES SKEWED_STRING_LIST (STRING_LIST_ID) ;

CREATE INDEX SKEWED_STRSI9H_N49 ON SKEWED_STRING_LIST_VALUES (STRING_LIST_ID);


-- Constraints for table SKEWED_COL_VALUE_LOC_MAP
ALTER TABLE SKEWED_COL_VALUE_LOC_MAP ADD CONSTRAINT SKEWED_COL5JSQ_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

ALTER TABLE SKEWED_COL_VALUE_LOC_MAP ADD CONSTRAINT SKEWED_COL5JSQ_FK2 FOREIGN KEY (STRING_LIST_ID_KID) REFERENCES SKEWED_STRING_LIST (STRING_LIST_ID) ;

CREATE INDEX SKEWED_COL5JSQ_N49 ON SKEWED_COL_VALUE_LOC_MAP (STRING_LIST_ID_KID);

CREATE INDEX SKEWED_COL5JSQ_N50 ON SKEWED_COL_VALUE_LOC_MAP (SD_ID);


-- Constraints for table PARTITION_KEY_VALS
ALTER TABLE PARTITION_KEY_VALS ADD CONSTRAINT PARTITION_ZCCN_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) ;

CREATE INDEX PARTITION_ZCCN_N49 ON PARTITION_KEY_VALS (PART_ID);


-- Constraints for table TABLE_PARAMS
ALTER TABLE TABLE_PARAMS ADD CONSTRAINT TABLE_PARAMS_FK1 FOREIGN KEY (TBL_ID) REFERENCES TBLS (TBL_ID) ;

CREATE INDEX TABLE_PARAMS_N49 ON TABLE_PARAMS (TBL_ID);


-- Constraints for table SKEWED_VALUES
ALTER TABLE SKEWED_VALUES ADD CONSTRAINT SKEWED_VALUES_FK1 FOREIGN KEY (SD_ID_OID) REFERENCES SDS (SD_ID) ;

ALTER TABLE SKEWED_VALUES ADD CONSTRAINT SKEWED_VALUES_FK2 FOREIGN KEY (STRING_LIST_ID_EID) REFERENCES SKEWED_STRING_LIST (STRING_LIST_ID) ;

CREATE INDEX SKEWED_VALUES_N50 ON SKEWED_VALUES (STRING_LIST_ID_EID);

CREATE INDEX SKEWED_VALUES_N49 ON SKEWED_VALUES (SD_ID_OID);


-- Constraints for table SKEWED_COL_NAMES
ALTER TABLE SKEWED_COL_NAMES ADD CONSTRAINT SKEWED_COLB0UL_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

CREATE INDEX SKEWED_COLB0UL_N49 ON SKEWED_COL_NAMES (SD_ID);


-- Constraints for table PARTITION_PARAMS
ALTER TABLE PARTITION_PARAMS ADD CONSTRAINT PARTITION_58RF_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) ;

CREATE INDEX PARTITION_58RF_N49 ON PARTITION_PARAMS (PART_ID);


-- Constraints for table BUCKETING_COLS
ALTER TABLE BUCKETING_COLS ADD CONSTRAINT BUCKETING_COLS_FK1 FOREIGN KEY (SD_ID) REFERENCES SDS (SD_ID) ;

CREATE INDEX BUCKETING_COLS_N49 ON BUCKETING_COLS (SD_ID);


-- Constraints for table DATABASE_PARAMS
ALTER TABLE DATABASE_PARAMS ADD CONSTRAINT DATABASE_PC6A2_FK1 FOREIGN KEY (DB_ID) REFERENCES DBS (DB_ID) ;

CREATE INDEX DATABASE_PC6A2_N49 ON DATABASE_PARAMS (DB_ID);


-- Constraints for table SERDE_PARAMS
ALTER TABLE SERDE_PARAMS ADD CONSTRAINT SERDE_PARAMS_FK1 FOREIGN KEY (SERDE_ID) REFERENCES SERDES (SERDE_ID) ;

CREATE INDEX SERDE_PARAMS_N49 ON SERDE_PARAMS (SERDE_ID);



-- ----------------------------------------------------------------
-- Sequences and SequenceTables
